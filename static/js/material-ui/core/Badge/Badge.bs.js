// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";

((require('../../scss/Badge/badge.scss')));

function others(value) {
  if (value !== undefined) {
    return value;
  } else {
    return "auto";
  }
}

function transforms(key, value) {
  if (key !== undefined) {
    if (value !== undefined) {
      return "translate(-15px, 15px)";
    } else {
      return "translate(15px, 15px)";
    }
  } else if (value !== undefined) {
    return "translate(-15px, -15px)";
  } else {
    return "translate(15px, -15px)";
  }
}

function colors(color) {
  if (color !== undefined) {
    return color;
  } else {
    return "rgba(255,255,255,1)";
  }
}

function backgroundColors(value) {
  if (value !== undefined) {
    return value;
  } else {
    return "#3f51b5";
  }
}

function Badge(Props) {
  var style = Props.style;
  var vertical = Props.vertical;
  var horizontal = Props.horizontal;
  var top = Props.top;
  var right = Props.right;
  var bottom = Props.bottom;
  var left = Props.left;
  var color = Props.color;
  var backgroundColor = Props.backgroundColor;
  var children = Props.children;
  return React.createElement("span", {
              className: "j1nwm6bj j177wmhi",
              style: Object.assign(({}), {
                    backgroundColor: backgroundColor !== undefined ? backgroundColor : "#3f51b5",
                    bottom: bottom !== undefined ? bottom : "auto",
                    color: color !== undefined ? color : "rgba(255,255,255,1)",
                    left: left !== undefined ? left : "auto",
                    right: right !== undefined ? right : "auto",
                    top: top !== undefined ? top : "auto",
                    transform: transforms(vertical, horizontal)
                  }, Setting$BtsCore.styleObjects(style))
            }, children);
}

var make = Badge;

export {
  others ,
  transforms ,
  colors ,
  backgroundColors ,
  make ,
  
}
/*  Not a pure module */
