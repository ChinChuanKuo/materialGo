// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";

((require('../../scss/Progress/progressWaiting.scss')));

function pointColors(pointColor) {
  if (pointColor !== undefined) {
    return "radial-gradient(" + (pointColor + (" 0%," + (pointColor + " 16%,transparent 42%)")));
  } else {
    return "radial-gradient(rgba(240,132,171,1) 0%, rgba(240,132,171,1) 16%, transparent 42%)";
  }
}

function lineColors(lineColor) {
  if (lineColor !== undefined) {
    return lineColor;
  } else {
    return "rgba(225,0,80,1)";
  }
}

function lineTransforms(lineTransform) {
  if (lineTransform !== undefined) {
    return "scaleX(" + (lineTransform + ")");
  } else {
    return "scaleX(0)";
  }
}

function runColors(runColor) {
  if (runColor !== undefined) {
    return runColor;
  } else {
    return "rgba(240,132,171,1)";
  }
}

function runTransforms(runTransform) {
  if (runTransform !== undefined) {
    return "scaleX(" + (runTransform + ")");
  } else {
    return "scaleX(0.06)";
  }
}

function ProgressWaiting(Props) {
  var style = Props.style;
  var pointColor = Props.pointColor;
  var lineColor = Props.lineColor;
  var lineTransform = Props.lineTransform;
  var runColor = Props.runColor;
  var runTransform = Props.runTransform;
  return React.createElement("div", {
              className: "jsrd2tl",
              role: "progressbar",
              style: Object.assign(({}), {
                    backgroundColor: "transparent"
                  }, Setting$BtsCore.styleObjects(style))
            }, React.createElement("div", {
                  style: {
                    backgroundImage: pointColors(pointColor),
                    backgroundPosition: "0px -23px",
                    height: "100%",
                    position: "absolute",
                    width: "100%",
                    backgroundSize: "10px 10px",
                    animation: "buffer 3s infinite linear"
                  }
                }), React.createElement("div", {
                  className: "j128yqez",
                  style: {
                    backgroundColor: lineColor !== undefined ? lineColor : "rgba(225,0,80,1)",
                    width: "100%",
                    zIndex: "1",
                    transition: "transform 0.4s linear",
                    transform: lineTransforms(lineTransform)
                  }
                }), React.createElement("div", {
                  className: "j128yqez",
                  style: {
                    backgroundColor: runColor !== undefined ? runColor : "rgba(240,132,171,1)",
                    width: "100%",
                    transition: "transform 0.4s linear",
                    transform: runTransforms(runTransform)
                  }
                }));
}

var make = ProgressWaiting;

export {
  pointColors ,
  lineColors ,
  lineTransforms ,
  runColors ,
  runTransforms ,
  make ,
  
}
/*  Not a pure module */
