// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";

((require('../../scss/Table/tableCell.scss')));

function paddingOthers(other) {
  if (other !== undefined) {
    return other + "px";
  } else {
    return "4px";
  }
}

function paddingRights(paddingRight) {
  if (paddingRight !== undefined) {
    return paddingRight + "px";
  } else {
    return "56px";
  }
}

function paddingLefts(paddingLeft) {
  if (paddingLeft !== undefined) {
    return paddingLeft + "px";
  } else {
    return "24px";
  }
}

function colors(color) {
  if (color !== undefined) {
    return color;
  } else {
    return "rgba(0,0,0,0.54)";
  }
}

function textAligns(textAlign) {
  if (textAlign !== undefined) {
    return textAlign;
  } else {
    return "left";
  }
}

function TableCell(Props) {
  var style = Props.style;
  var top = Props.top;
  var right = Props.right;
  var bottom = Props.bottom;
  var left = Props.left;
  var color = Props.color;
  var textAlign = Props.textAlign;
  var children = Props.children;
  return React.createElement("tr", {
              className: "jcqtdg2 jhjsvkq",
              style: Object.assign(({}), {
                    color: color !== undefined ? color : "rgba(0,0,0,0.54)",
                    paddingTop: paddingOthers(top),
                    paddingRight: paddingRights(right),
                    paddingBottom: paddingOthers(bottom),
                    paddingLeft: paddingLefts(left),
                    textAlign: textAlign !== undefined ? textAlign : "left"
                  }, Setting$BtsCore.styleObjects(style))
            }, children);
}

var make = TableCell;

export {
  paddingOthers ,
  paddingRights ,
  paddingLefts ,
  colors ,
  textAligns ,
  make ,
  
}
/*  Not a pure module */
