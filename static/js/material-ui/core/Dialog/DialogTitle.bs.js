// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";

((require('../../scss/Dialog/dialogTitle.scss')));

function paddingOthers(other) {
  if (other !== undefined) {
    return other + "px";
  } else {
    return "24px";
  }
}

function paddingBottoms(bottom) {
  if (bottom !== undefined) {
    return bottom + "px";
  } else {
    return "20px";
  }
}

function backgroundColors(backgroundColor) {
  if (backgroundColor !== undefined) {
    return backgroundColor;
  } else {
    return "rgba(255,255,255,1)";
  }
}

function colors(color) {
  if (color !== undefined) {
    return color;
  } else {
    return "rgba(0,0,0,1)";
  }
}

function DialogTitle(Props) {
  var style = Props.style;
  var top = Props.top;
  var right = Props.right;
  var bottom = Props.bottom;
  var left = Props.left;
  var backgroundColor = Props.backgroundColor;
  var color = Props.color;
  var children = Props.children;
  return React.createElement("div", {
              className: "j16fb98s",
              style: {
                backgroundColor: backgroundColor !== undefined ? backgroundColor : "rgba(255,255,255,1)",
                paddingTop: paddingOthers(top),
                paddingRight: paddingOthers(right),
                paddingBottom: paddingBottoms(bottom),
                paddingLeft: paddingOthers(left)
              }
            }, React.createElement("h6", {
                  className: "j59oks2 j1ylkzii",
                  style: Object.assign(({}), {
                        color: color !== undefined ? color : "rgba(0,0,0,1)"
                      }, Setting$BtsCore.styleObjects(style))
                }, children));
}

var make = DialogTitle;

export {
  paddingOthers ,
  paddingBottoms ,
  backgroundColors ,
  colors ,
  make ,
  
}
/*  Not a pure module */
