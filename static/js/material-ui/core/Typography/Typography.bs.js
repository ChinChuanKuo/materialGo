// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";

((require('../../scss/Typography/typography.scss')));

function components(variant) {
  switch (variant) {
    case "body1" :
    case "body2" :
        return "p";
    case "h4" :
        return "h4";
    case "h5" :
        return "h5";
    case "button" :
    case "caption" :
    case "overline" :
        return "span";
    case "h3" :
    case "subheading" :
        return "h3";
    case "h6" :
    case "subtitle1" :
    case "subtitle2" :
        return "h6";
    case "display1" :
    case "display2" :
    case "display3" :
    case "display4" :
    case "h1" :
    case "h2" :
    case "headline" :
    case "tile" :
        return "h2";
    default:
      return "h2";
  }
}

function colors(color) {
  if (color !== undefined) {
    return color;
  } else {
    return "rgba(0,0,0,0.87)";
  }
}

function fontFamilys(fontFamily) {
  if (fontFamily !== undefined) {
    return fontFamily;
  } else {
    return "Roboto, Helvetica, Arial, sans-serif";
  }
}

function fontSizes(variant, fontSize) {
  switch (variant) {
    case "display2" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "2.8125rem";
        }
    case "display3" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "3.5rem";
        }
    case "display4" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "7rem";
        }
    case "h1" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "6rem";
        }
    case "h2" :
        if (fontSize !== undefined && fontSize !== undefined) {
          return fontSize;
        } else {
          return "3.75rem";
        }
    case "h3" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "3rem";
        }
    case "display1" :
    case "h4" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "2.125rem";
        }
    case "h6" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "1.25rem";
        }
    case "h5" :
    case "headline" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "1.5rem";
        }
    case "caption" :
    case "overline" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "0.75rem";
        }
    case "body1" :
    case "subheading" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "1rem";
        }
    case "body2" :
    case "button" :
    case "subtitle1" :
    case "subtitle2" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "0.875rem";
        }
    case "tile" :
        if (fontSize !== undefined) {
          if (fontSize !== undefined) {
            return fontSize;
          } else {
            return "3.75rem";
          }
        } else {
          return "1.3125rem";
        }
    default:
      if (fontSize !== undefined) {
        return fontSize;
      } else {
        return "3.75rem";
      }
  }
}

function fontWeights(variant, fontWeight) {
  if (fontWeight !== undefined) {
    return fontWeight;
  }
  switch (variant) {
    case "display4" :
    case "h1" :
    case "h2" :
        return "300";
    case "body1" :
    case "body2" :
    case "button" :
    case "caption" :
    case "display1" :
    case "display2" :
    case "display3" :
    case "h3" :
    case "h4" :
    case "h5" :
    case "headline" :
    case "overline" :
    case "subheading" :
    case "subtitle1" :
        return "400";
    case "h6" :
    case "subtitle2" :
    case "tile" :
        return "500";
    default:
      return "300";
  }
}

function lineHeights(variant, lineHeight) {
  switch (variant) {
    case "body1" :
    case "body2" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.5";
        }
    case "caption" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.66";
        }
    case "display1" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.20588em";
        }
    case "display2" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.13333em";
        }
    case "display3" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.30357em";
        }
    case "display4" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.14286em";
        }
    case "h1" :
    case "h2" :
        if (lineHeight !== undefined && lineHeight !== undefined) {
          return lineHeight;
        } else {
          return "1";
        }
    case "h3" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.04";
        }
    case "h4" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.17";
        }
    case "h5" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.33";
        }
    case "h6" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.6";
        }
    case "headline" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.35417em";
        }
    case "overline" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "2.66";
        }
    case "subheading" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.5em";
        }
    case "button" :
    case "subtitle1" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.75";
        }
    case "subtitle2" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.57";
        }
    case "tile" :
        if (lineHeight !== undefined) {
          if (lineHeight !== undefined) {
            return lineHeight;
          } else {
            return "1";
          }
        } else {
          return "1.16667em";
        }
    default:
      if (lineHeight !== undefined) {
        return lineHeight;
      } else {
        return "1";
      }
  }
}

function letterSpacings(variant, letterSpacing) {
  switch (variant) {
    case "body2" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0.01071em";
        }
    case "button" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0.02857em";
        }
    case "caption" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0.03333em";
        }
    case "display3" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "-0.02em";
        }
    case "display4" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "-0.04em";
        }
    case "h1" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "-0.01562em";
        }
    case "h2" :
        if (letterSpacing !== undefined && letterSpacing !== undefined) {
          return letterSpacing;
        } else {
          return "-0.00833em";
        }
    case "h4" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0.00735em";
        }
    case "h6" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0.0075em";
        }
    case "overline" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0.08333em";
        }
    case "body1" :
    case "subtitle1" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0.00938em";
        }
    case "subtitle2" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0.00714em";
        }
    case "display1" :
    case "display2" :
    case "h3" :
    case "h5" :
    case "headline" :
    case "subheading" :
    case "tile" :
        if (letterSpacing !== undefined) {
          if (letterSpacing !== undefined) {
            return letterSpacing;
          } else {
            return "-0.00833em";
          }
        } else {
          return "0em";
        }
    default:
      if (letterSpacing !== undefined) {
        return letterSpacing;
      } else {
        return "-0.00833em";
      }
  }
}

function whiteSpaces(whiteSpace, noWrap) {
  if (whiteSpace !== undefined) {
    return whiteSpace;
  } else if (noWrap) {
    return "nowrap";
  } else {
    return "pre-wrap";
  }
}

function Typography(Props) {
  var variant = Props.variant;
  var style = Props.style;
  var color = Props.color;
  var fontFamily = Props.fontFamily;
  var fontSize = Props.fontSize;
  var fontWeight = Props.fontWeight;
  var lineHeight = Props.lineHeight;
  var letterSpacing = Props.letterSpacing;
  var whiteSpace = Props.whiteSpace;
  var noWrap = Props.noWrap;
  var children = Props.children;
  return React.createElement(components(Setting$BtsCore.stringObjects(variant)), {
              className: "jss164",
              style: Object.assign(({}), {
                    color: color !== undefined ? color : "rgba(0,0,0,0.87)",
                    fontFamily: fontFamily !== undefined ? fontFamily : "Roboto, Helvetica, Arial, sans-serif",
                    fontSize: fontSizes(Setting$BtsCore.stringObjects(variant), fontSize),
                    fontWeight: fontWeights(Setting$BtsCore.stringObjects(variant), fontWeight),
                    letterSpacing: letterSpacings(Setting$BtsCore.stringObjects(variant), letterSpacing),
                    lineHeight: lineHeights(Setting$BtsCore.stringObjects(variant), lineHeight),
                    overflow: "hidden",
                    whiteSpace: whiteSpaces(whiteSpace, Setting$BtsCore.disabledObjects(noWrap)),
                    textOverflow: "ellipsis"
                  }, Setting$BtsCore.styleObjects(style))
            }, children);
}

var make = Typography;

export {
  components ,
  colors ,
  fontFamilys ,
  fontSizes ,
  fontWeights ,
  lineHeights ,
  letterSpacings ,
  whiteSpaces ,
  make ,
  
}
/*  Not a pure module */
