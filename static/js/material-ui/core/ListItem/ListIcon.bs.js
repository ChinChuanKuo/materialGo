// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";

((require('../../scss/ListItem/listItem.scss')));

function reducer(state, action) {
  if (action.tag) {
    return {
            enter: state.enter,
            down: action[0]
          };
  }
  var enter = action[0];
  return {
          enter: enter,
          down: enter ? state.down : false
        };
}

var initialState = {
  enter: false,
  down: false
};

function components(variant) {
  switch (variant) {
    case "Link" :
    case "a" :
        return "a";
    default:
      return "div";
  }
}

function disabledBackgroundColors(disabledBackgroundColor) {
  if (disabledBackgroundColor !== undefined) {
    return disabledBackgroundColor;
  } else {
    return "rgba(102,102,102,0.8)";
  }
}

function otherBackgroundColors(otherBackgroundColor) {
  if (otherBackgroundColor !== undefined) {
    return otherBackgroundColor;
  } else {
    return "rgba(0,0,0,0.08)";
  }
}

function backgroundColors(backgroundColor) {
  if (backgroundColor !== undefined) {
    return backgroundColor;
  } else {
    return "rgba(255,255,255,1)";
  }
}

function disablePaddings(disablePadding) {
  if (disablePadding) {
    return "32px";
  } else {
    return "16px";
  }
}

function displays(display) {
  if (display !== undefined) {
    return display;
  } else {
    return "flex";
  }
}

function borderRadiuses(borderRadius) {
  if (borderRadius !== undefined) {
    return borderRadius + "px";
  } else {
    return "0px";
  }
}

function paddingTopBottoms(topBottom) {
  if (topBottom !== undefined) {
    return topBottom + "px";
  } else {
    return "0px";
  }
}

function paddingRightLefts(rightLeft) {
  if (rightLeft !== undefined) {
    return rightLeft + "px";
  } else {
    return "16px";
  }
}

function colors(color) {
  if (color !== undefined) {
    return color;
  } else {
    return "rgba(0,0,0,1)";
  }
}

function ListIcon(Props) {
  var variant = Props.variant;
  var style = Props.style;
  var disabledBackgroundColor = Props.disabledBackgroundColor;
  var enterBackgroundColor = Props.enterBackgroundColor;
  var downBackgroundColor = Props.downBackgroundColor;
  var backgroundColor = Props.backgroundColor;
  var disablePadding = Props.disablePadding;
  var display = Props.display;
  var topLeft = Props.topLeft;
  var topRight = Props.topRight;
  var bottomRight = Props.bottomRight;
  var bottomLeft = Props.bottomLeft;
  var disabled = Props.disabled;
  var top = Props.top;
  var right = Props.right;
  var bottom = Props.bottom;
  var left = Props.left;
  var onClick = Props.onClick;
  var color = Props.color;
  var children = Props.children;
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var match$1 = Setting$BtsCore.disabledObjects(disabled);
  var match$2 = state.enter;
  var match$3 = state.down;
  var disablePadding$1 = Setting$BtsCore.disabledObjects(disablePadding);
  var tmp = {
    className: "j1a697ls j1nroktp jn23b2n jr0u89wl",
    role: "button",
    style: Object.assign(({}), {
          backgroundColor: match$1 ? (
              disabledBackgroundColor !== undefined ? disabledBackgroundColor : "rgba(102,102,102,0.8)"
            ) : (
              match$2 ? (
                  match$3 ? (
                      downBackgroundColor !== undefined ? downBackgroundColor : "rgba(0,0,0,0.08)"
                    ) : (
                      enterBackgroundColor !== undefined ? enterBackgroundColor : "rgba(0,0,0,0.08)"
                    )
                ) : (
                  backgroundColor !== undefined ? backgroundColor : "rgba(255,255,255,1)"
                )
            ),
          display: display !== undefined ? display : "flex",
          paddingLeft: disablePadding$1 ? "32px" : "16px",
          borderTopLeftRadius: borderRadiuses(topLeft),
          borderTopRightRadius: borderRadiuses(topRight),
          borderBottomLeftRadius: borderRadiuses(bottomLeft),
          borderBottomRightRadius: borderRadiuses(bottomRight)
        }, Setting$BtsCore.styleObjects(style)),
    disabled: Setting$BtsCore.disabledObjects(disabled),
    onMouseDown: (function (param) {
        return Curry._1(dispatch, /* MouseUpDown */Block.__(1, [true]));
      }),
    onMouseEnter: (function (param) {
        return Curry._1(dispatch, /* MouseEnterLeave */Block.__(0, [true]));
      }),
    onMouseLeave: (function (param) {
        return Curry._1(dispatch, /* MouseEnterLeave */Block.__(0, [false]));
      }),
    onMouseUp: (function (param) {
        return Curry._1(dispatch, /* MouseUpDown */Block.__(1, [false]));
      })
  };
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  return React.createElement(components(Setting$BtsCore.stringObjects(variant)), tmp, React.createElement("div", {
                  className: "j1xd9iw9"
                }, children[0]), React.createElement("div", {
                  className: "j9018ah",
                  style: {
                    paddingTop: paddingTopBottoms(top),
                    paddingRight: paddingRightLefts(right),
                    paddingBottom: paddingTopBottoms(bottom),
                    paddingLeft: paddingRightLefts(left)
                  }
                }, React.createElement("span", {
                      className: "j1pzzryc j59oks2",
                      style: {
                        color: color !== undefined ? color : "rgba(0,0,0,1)"
                      }
                    }, children[1])), React.createElement("span", {
                  className: "jb3bkca"
                }));
}

var make = ListIcon;

export {
  reducer ,
  initialState ,
  components ,
  disabledBackgroundColors ,
  otherBackgroundColors ,
  backgroundColors ,
  disablePaddings ,
  displays ,
  borderRadiuses ,
  paddingTopBottoms ,
  paddingRightLefts ,
  colors ,
  make ,
  
}
/*  Not a pure module */
