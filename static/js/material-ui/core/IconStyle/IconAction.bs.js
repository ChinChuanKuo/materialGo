// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";

((require('../../scss/IconStyle/iconStyle.scss')));

function reducer(param, action) {
  return {
          enter: action[0]
        };
}

var initialState = {
  enter: false
};

function sizes(size) {
  if (size !== undefined) {
    return size + "px";
  } else {
    return "24px";
  }
}

function animations(animation) {
  switch (animation) {
    case "circle" :
        return "circleAnimation 0.8s infinite";
    case "circleTop" :
        return "circleTopAnimation 1s infinite";
    case "leftRight" :
        return "leftRightAnimation 0.5s infinite";
    default:
      return animation;
  }
}

function classes(className) {
  var basic = "icons";
  if (className !== undefined) {
    return basic + (" " + className);
  } else {
    return basic;
  }
}

function IconAction(Props) {
  var style = Props.style;
  var width = Props.width;
  var height = Props.height;
  var animation = Props.animation;
  var className = Props.className;
  var src = Props.src;
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  return React.createElement("span", {
              className: classes(className),
              style: Object.assign(({}), {
                    height: sizes(height),
                    width: sizes(width),
                    animation: match[0].enter ? animations(Setting$BtsCore.stringObjects(animation)) : ""
                  }, Setting$BtsCore.styleObjects(style)),
              onMouseEnter: (function (param) {
                  return Curry._1(dispatch, /* MouseEnterLeave */[true]);
                }),
              onMouseLeave: (function (param) {
                  return Curry._1(dispatch, /* MouseEnterLeave */[false]);
                })
            }, React.createElement("img", {
                  style: {
                    display: "block",
                    height: sizes(height),
                    width: sizes(width)
                  },
                  src: Setting$BtsCore.stringObjects(src)
                }));
}

var make = IconAction;

export {
  reducer ,
  initialState ,
  sizes ,
  animations ,
  classes ,
  make ,
  
}
/*  Not a pure module */
