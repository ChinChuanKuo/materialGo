// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ReactIntl from "react-intl";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Menu$BtsCore from "../../material-ui/core/Menu/Menu.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Divider$BtsCore from "../../material-ui/core/Divider/Divider.bs.js";
import * as OutSide$BtsCore from "../../styles/OutSide/OutSide.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as BackgroundBoard$BtsCore from "../Boards/BackgroundBoard.bs.js";

function NewBookCreate(Props) {
  var maxHeight = Props.maxHeight;
  var createForm = Props.createForm;
  var contactsForm = Props.contactsForm;
  var assistantForm = Props.assistantForm;
  var flagForm = Props.flagForm;
  var groupForm = Props.groupForm;
  var eventForm = Props.eventForm;
  var storeForm = Props.storeForm;
  var clickShow = Props.clickShow;
  var tmp = {
    top: "0",
    right: "0",
    bottom: "0",
    left: "0",
    topLeft: "12",
    topRight: "12",
    bottomRight: "12",
    bottomLeft: "12",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "start",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    padding: "12",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.createBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Face.post",
                          defaultMessage: "Post"
                        })
                  })
            }))
  };
  if (createForm !== undefined) {
    tmp.onClick = Caml_option.valFromOption(createForm);
  }
  var tmp$1 = {
    top: "0",
    right: "0",
    bottom: "0",
    left: "0",
    topLeft: "12",
    topRight: "12",
    bottomRight: "12",
    bottomLeft: "12",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "start",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    padding: "12",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.importContactsBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Face.time",
                          defaultMessage: "Time"
                        })
                  })
            }))
  };
  if (contactsForm !== undefined) {
    tmp$1.onClick = Caml_option.valFromOption(contactsForm);
  }
  var tmp$2 = {
    top: "0",
    right: "0",
    bottom: "0",
    left: "0",
    topLeft: "12",
    topRight: "12",
    bottomRight: "12",
    bottomLeft: "12",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "start",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    padding: "12",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.assistantBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Face.life",
                          defaultMessage: "Life"
                        })
                  })
            }))
  };
  if (assistantForm !== undefined) {
    tmp$2.onClick = Caml_option.valFromOption(assistantForm);
  }
  var tmp$3 = {
    top: "0",
    right: "0",
    bottom: "0",
    left: "0",
    topLeft: "12",
    topRight: "12",
    bottomRight: "12",
    bottomLeft: "12",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "start",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    padding: "12",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.flagBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Face.fan",
                          defaultMessage: "Fan"
                        })
                  })
            }))
  };
  if (flagForm !== undefined) {
    tmp$3.onClick = Caml_option.valFromOption(flagForm);
  }
  var tmp$4 = {
    top: "0",
    right: "0",
    bottom: "0",
    left: "0",
    topLeft: "12",
    topRight: "12",
    bottomRight: "12",
    bottomLeft: "12",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "start",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    padding: "12",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.groupBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Face.group",
                          defaultMessage: "Group"
                        })
                  })
            }))
  };
  if (groupForm !== undefined) {
    tmp$4.onClick = Caml_option.valFromOption(groupForm);
  }
  var tmp$5 = {
    top: "0",
    right: "0",
    bottom: "0",
    left: "0",
    topLeft: "12",
    topRight: "12",
    bottomRight: "12",
    bottomLeft: "12",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "start",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    padding: "12",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.eventBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Face.activity",
                          defaultMessage: "Activity"
                        })
                  })
            }))
  };
  if (eventForm !== undefined) {
    tmp$5.onClick = Caml_option.valFromOption(eventForm);
  }
  var tmp$6 = {
    top: "0",
    right: "0",
    bottom: "0",
    left: "0",
    topLeft: "12",
    topRight: "12",
    bottomRight: "12",
    bottomLeft: "12",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "start",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    padding: "12",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.storefrontBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Face.market",
                          defaultMessage: "Market"
                        })
                  })
            }))
  };
  if (storeForm !== undefined) {
    tmp$6.onClick = Caml_option.valFromOption(storeForm);
  }
  var tmp$7 = {
    showBackground: true,
    backgroundColor: "transparent"
  };
  if (clickShow !== undefined) {
    tmp$7.onClick = Caml_option.valFromOption(clickShow);
  }
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  style: Object.assign(({}), OutSide$BtsCore.menuOutSide, {
                        maxHeight: maxHeight,
                        maxWidth: "360px",
                        minWidth: "360px",
                        right: "16px",
                        width: "360px",
                        borderRadius: "10px"
                      })
                }, React.createElement(Menu$BtsCore.make, {
                      topLeft: "12",
                      topRight: "12",
                      bottomRight: "12",
                      bottomLeft: "12",
                      right: "8",
                      left: "8",
                      children: React.createElement(GridContainer$BtsCore.make, {
                            backgroundColor: "transparent",
                            direction: "column",
                            justify: "center",
                            alignItem: "stretch",
                            children: null
                          }, React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, {
                                      top: "0",
                                      right: "8",
                                      bottom: "0",
                                      enterBackgroundColor: "transparent",
                                      downBackgroundColor: "transparent",
                                      backgroundColor: "transparent",
                                      children: React.createElement(Typography$BtsCore.make, {
                                            variant: "headline",
                                            children: React.createElement(ReactIntl.FormattedMessage, {
                                                  id: "Face.creator",
                                                  defaultMessage: "Creator"
                                                })
                                          })
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$1)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$2)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "6",
                                bottom: "6",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(Divider$BtsCore.make, { })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$3)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$4)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$5)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$6)
                              }))
                    })), React.createElement(BackgroundBoard$BtsCore.make, tmp$7));
}

var make = NewBookCreate;

export {
  make ,
  
}
/* react Not a pure module */
