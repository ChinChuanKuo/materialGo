// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ReactIntl from "react-intl";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Menu$BtsCore from "../../material-ui/core/Menu/Menu.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Divider$BtsCore from "../../material-ui/core/Divider/Divider.bs.js";
import * as OutSide$BtsCore from "../../styles/OutSide/OutSide.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as BackgroundBoard$BtsCore from "../Boards/BackgroundBoard.bs.js";

function NewGramUser(Props) {
  var profileForm = Props.profileForm;
  var savedForm = Props.savedForm;
  var settingForm = Props.settingForm;
  var accountForm = Props.accountForm;
  var clickOut = Props.clickOut;
  var clickShow = Props.clickShow;
  var tmp = {
    top: "4",
    right: "16",
    bottom: "4",
    left: "16",
    minHeight: "0",
    enterBackgroundColor: "transparent",
    downBackgroundColor: "transparent",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "between",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    enterBackgroundColor: "transparent",
                    downBackgroundColor: "transparent",
                    padding: "0",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.accountCircleBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "6",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "auto",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    color: "rgba(38,38,38,1)",
                    fontSize: "14px",
                    fontWeight: "400",
                    lineHeight: "18px",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Gram.profile",
                          defaultMessage: "Privacy"
                        })
                  })
            }))
  };
  if (profileForm !== undefined) {
    tmp.onClick = Caml_option.valFromOption(profileForm);
  }
  var tmp$1 = {
    top: "4",
    right: "16",
    bottom: "4",
    left: "16",
    minHeight: "0",
    enterBackgroundColor: "transparent",
    downBackgroundColor: "transparent",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "between",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    enterBackgroundColor: "transparent",
                    downBackgroundColor: "transparent",
                    padding: "0",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.bookmarkBorderBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "6",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "auto",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    color: "rgba(38,38,38,1)",
                    fontSize: "14px",
                    fontWeight: "400",
                    lineHeight: "18px",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Gram.saved",
                          defaultMessage: "Saved"
                        })
                  })
            }))
  };
  if (savedForm !== undefined) {
    tmp$1.onClick = Caml_option.valFromOption(savedForm);
  }
  var tmp$2 = {
    top: "4",
    right: "16",
    bottom: "4",
    left: "16",
    minHeight: "0",
    enterBackgroundColor: "transparent",
    downBackgroundColor: "transparent",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "between",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    enterBackgroundColor: "transparent",
                    downBackgroundColor: "transparent",
                    padding: "0",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.settingsApplicationsBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "6",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "auto",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    color: "rgba(38,38,38,1)",
                    fontSize: "14px",
                    fontWeight: "400",
                    lineHeight: "18px",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Gram.setting",
                          defaultMessage: "Setting"
                        })
                  })
            }))
  };
  if (settingForm !== undefined) {
    tmp$2.onClick = Caml_option.valFromOption(settingForm);
  }
  var tmp$3 = {
    style: {
      marginBottom: "4px"
    },
    top: "4",
    right: "16",
    bottom: "4",
    left: "16",
    minHeight: "0",
    enterBackgroundColor: "transparent",
    downBackgroundColor: "transparent",
    children: React.createElement(GridContainer$BtsCore.make, {
          backgroundColor: "transparent",
          direction: "row",
          justify: "between",
          alignItem: "center",
          children: null
        }, React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "0",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "no",
              children: React.createElement(IconButton$BtsCore.make, {
                    enterBackgroundColor: "transparent",
                    downBackgroundColor: "transparent",
                    padding: "0",
                    children: React.createElement(IconAction$BtsCore.make, {
                          animation: "leftRight",
                          src: Icons$BtsCore.cachedBlack
                        })
                  })
            }), React.createElement(GridItem$BtsCore.make, {
              top: "0",
              right: "0",
              bottom: "0",
              left: "6",
              enterBackgroundColor: "transparent",
              backgroundColor: "transparent",
              xs: "auto",
              children: React.createElement(Typography$BtsCore.make, {
                    variant: "subheading",
                    color: "rgba(38,38,38,1)",
                    fontSize: "14px",
                    fontWeight: "400",
                    lineHeight: "18px",
                    children: React.createElement(ReactIntl.FormattedMessage, {
                          id: "Gram.account",
                          defaultMessage: "Account"
                        })
                  })
            }))
  };
  if (accountForm !== undefined) {
    tmp$3.onClick = Caml_option.valFromOption(accountForm);
  }
  var tmp$4 = {
    style: {
      marginBottom: "4px"
    },
    top: "8",
    right: "16",
    bottom: "8",
    left: "16",
    minHeight: "0",
    enterBackgroundColor: "transparent",
    downBackgroundColor: "transparent",
    children: React.createElement(Typography$BtsCore.make, {
          variant: "subheading",
          color: "rgba(38,38,38,1)",
          fontSize: "14px",
          fontWeight: "400",
          lineHeight: "18px",
          children: React.createElement(ReactIntl.FormattedMessage, {
                id: "Action.logout",
                defaultMessage: "Logout"
              })
        })
  };
  if (clickOut !== undefined) {
    tmp$4.onClick = Caml_option.valFromOption(clickOut);
  }
  var tmp$5 = {
    showBackground: true,
    backgroundColor: "transparent"
  };
  if (clickShow !== undefined) {
    tmp$5.onClick = Caml_option.valFromOption(clickShow);
  }
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  style: Object.assign(({}), OutSide$BtsCore.menuOutSide, {
                        marginLeft: "-180px",
                        maxWidth: "230px",
                        minWidth: "230px",
                        top: "54px",
                        width: "230px",
                        borderRadius: "10px"
                      })
                }, React.createElement(Menu$BtsCore.make, {
                      top: "0",
                      right: "0",
                      bottom: "0",
                      left: "0",
                      children: React.createElement(GridContainer$BtsCore.make, {
                            backgroundColor: "transparent",
                            direction: "column",
                            justify: "start",
                            alignItem: "stretch",
                            children: null
                          }, React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$1)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$2)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$3)
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(Divider$BtsCore.make, { })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                enterBackgroundColor: "transparent",
                                backgroundColor: "transparent",
                                xs: "auto",
                                children: React.createElement(MenuItem$BtsCore.make, tmp$4)
                              }))
                    })), React.createElement(BackgroundBoard$BtsCore.make, tmp$5));
}

var make = NewGramUser;

export {
  make ,
  
}
/* react Not a pure module */
