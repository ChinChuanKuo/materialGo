// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as NewYoutube$BtsCore from "../Youtube/NewYoutube.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as ExpansionBasis$BtsCore from "../../material-ui/core/ExpansionPanel/ExpansionBasis.bs.js";
import * as ExpansionPanel$BtsCore from "../../material-ui/core/ExpansionPanel/ExpansionPanel.bs.js";
import * as ExpansionSummary$BtsCore from "../../material-ui/core/ExpansionPanel/ExpansionSummary.bs.js";

function reducer(state, action) {
  if (action.tag) {
    var active = action[1];
    var index = action[0];
    return {
            formLoad: state.formLoad,
            showProgress: state.showProgress,
            items: $$Array.mapi((function (i, item) {
                    if (index === i) {
                      return {
                              isShow: !item.isShow,
                              active: active,
                              mains: item.mains,
                              descs: item.descs
                            };
                    } else {
                      return item;
                    }
                  }), state.items)
          };
  }
  var index$1 = action[0];
  return {
          formLoad: state.formLoad,
          showProgress: state.showProgress,
          items: $$Array.mapi((function (i, item) {
                  if (index$1 === i) {
                    return {
                            isShow: !item.isShow,
                            active: item.active,
                            mains: item.mains,
                            descs: item.descs
                          };
                  } else {
                    return item;
                  }
                }), state.items)
        };
}

var initialState_items = [
  {
    isShow: false,
    active: false,
    mains: [
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      }
    ],
    descs: [
      {
        descTitle: "Customer",
        descValue: "0001-Touch Dynamic",
        others: [
          {
            otherTitle: "Model",
            otherValue: "K755"
          },
          {
            otherTitle: "Standard",
            otherValue: "KK755D36C011"
          },
          {
            otherTitle: "Order Unit",
            otherValue: "1_POS-USA"
          },
          {
            otherTitle: "MB Model",
            otherValue: "D36"
          },
          {
            otherTitle: "MB Number",
            otherValue: "51D360V21001"
          },
          {
            otherTitle: "Before Six Month Total",
            otherValue: "1100"
          },
          {
            otherTitle: "Average Use In Month",
            otherValue: "183"
          },
          {
            otherTitle: "Ord_2019 04",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 05",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 05",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 06",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 06",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 07",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 07",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 08",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 08",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 09",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 09",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 10",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 10",
            otherValue: "0"
          },
          {
            otherTitle: "Shipment Order",
            otherValue: "1"
          },
          {
            otherTitle: "Customer",
            otherValue: "Touch Dynamic"
          }
        ]
      },
      {
        descTitle: "Customer",
        descValue: "0001-Touch Dynamic",
        others: [
          {
            otherTitle: "Model",
            otherValue: "K755"
          },
          {
            otherTitle: "Standard",
            otherValue: "KK755D36C011"
          },
          {
            otherTitle: "Order Unit",
            otherValue: "1_POS-USA"
          },
          {
            otherTitle: "MB Model",
            otherValue: "D36"
          },
          {
            otherTitle: "MB Number",
            otherValue: "51D360V21001"
          },
          {
            otherTitle: "Before Six Month Total",
            otherValue: "1100"
          },
          {
            otherTitle: "Average Use In Month",
            otherValue: "183"
          },
          {
            otherTitle: "Ord_2019 04",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 05",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 05",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 06",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 06",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 07",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 07",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 08",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 08",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 09",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 09",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 10",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 10",
            otherValue: "0"
          },
          {
            otherTitle: "Shipment Order",
            otherValue: "1"
          },
          {
            otherTitle: "Customer",
            otherValue: "Touch Dynamic"
          }
        ]
      }
    ]
  },
  {
    isShow: false,
    active: false,
    mains: [
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      },
      {
        mainTitle: "JAN",
        mainValue: "150"
      }
    ],
    descs: [
      {
        descTitle: "Customer",
        descValue: "0001-Touch Dynamic",
        others: [
          {
            otherTitle: "Model",
            otherValue: "K755"
          },
          {
            otherTitle: "Standard",
            otherValue: "KK755D36C011"
          },
          {
            otherTitle: "Order Unit",
            otherValue: "1_POS-USA"
          },
          {
            otherTitle: "MB Model",
            otherValue: "D36"
          },
          {
            otherTitle: "MB Number",
            otherValue: "51D360V21001"
          },
          {
            otherTitle: "Before Six Month Total",
            otherValue: "1100"
          },
          {
            otherTitle: "Average Use In Month",
            otherValue: "183"
          },
          {
            otherTitle: "Ord_2019 04",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 05",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 05",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 06",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 06",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 07",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 07",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 08",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 08",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 09",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 09",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 10",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 10",
            otherValue: "0"
          },
          {
            otherTitle: "Shipment Order",
            otherValue: "1"
          },
          {
            otherTitle: "Customer",
            otherValue: "Touch Dynamic"
          }
        ]
      },
      {
        descTitle: "Customer",
        descValue: "0001-Touch Dynamic",
        others: [
          {
            otherTitle: "Model",
            otherValue: "K755"
          },
          {
            otherTitle: "Standard",
            otherValue: "KK755D36C011"
          },
          {
            otherTitle: "Order Unit",
            otherValue: "1_POS-USA"
          },
          {
            otherTitle: "MB Model",
            otherValue: "D36"
          },
          {
            otherTitle: "MB Number",
            otherValue: "51D360V21001"
          },
          {
            otherTitle: "Before Six Month Total",
            otherValue: "1100"
          },
          {
            otherTitle: "Average Use In Month",
            otherValue: "183"
          },
          {
            otherTitle: "Ord_2019 04",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 05",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 05",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 06",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 06",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 07",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 07",
            otherValue: "300"
          },
          {
            otherTitle: "Ord_2019 08",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 08",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 09",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 09",
            otherValue: "0"
          },
          {
            otherTitle: "Ord_2019 10",
            otherValue: "0"
          },
          {
            otherTitle: "Fcst_2019 10",
            otherValue: "0"
          },
          {
            otherTitle: "Shipment Order",
            otherValue: "1"
          },
          {
            otherTitle: "Customer",
            otherValue: "Touch Dynamic"
          }
        ]
      }
    ]
  }
];

var initialState = {
  formLoad: false,
  showProgress: true,
  items: initialState_items
};

function ExpansionTables(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  return React.createElement(NewYoutube$BtsCore.make, {
              showProgress: state.showProgress,
              children: $$Array.mapi((function (i, item) {
                      return React.createElement(GridItem$BtsCore.make, {
                                  xs: "12",
                                  children: React.createElement("div", undefined, React.createElement(ExpansionPanel$BtsCore.make, {
                                            showPanel: item.isShow,
                                            children: /* tuple */[
                                              React.createElement(ExpansionSummary$BtsCore.make, {
                                                    showSummary: item.isShow,
                                                    onClick: (function (param) {
                                                        return Curry._1(dispatch, /* ShowPanel */Block.__(0, [i]));
                                                      }),
                                                    children: /* tuple */[
                                                      React.createElement(Typography$BtsCore.make, {
                                                            variant: "tile",
                                                            color: "rgba(0,0,0,1)",
                                                            noWrap: true,
                                                            children: "POS355/D36,D88U"
                                                          }),
                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                            src: item.isShow ? Icons$BtsCore.arrowUpBlack : Icons$BtsCore.arrowDownBlack
                                                          })
                                                    ]
                                                  }),
                                              React.createElement("div", {
                                                    style: {
                                                      width: "100%"
                                                    }
                                                  }, $$Array.map((function (main) {
                                                          return React.createElement("div", {
                                                                      style: {
                                                                        float: "left",
                                                                        height: "20px",
                                                                        marginTop: "10px",
                                                                        marginRight: "30px"
                                                                      }
                                                                    }, React.createElement(ExpansionBasis$BtsCore.make, {
                                                                          children: React.createElement("span", undefined, main.mainTitle + (" : " + main.mainValue))
                                                                        }));
                                                        }), item.mains))
                                            ]
                                          }), React.createElement(ExpansionPanel$BtsCore.make, {
                                            showPanel: item.isShow,
                                            children: /* tuple */[
                                              React.createElement(ExpansionSummary$BtsCore.make, {
                                                    showSummary: item.isShow,
                                                    onClick: (function (param) {
                                                        return Curry._1(dispatch, /* ShowPanel */Block.__(0, [i]));
                                                      }),
                                                    children: /* tuple */[
                                                      React.createElement(React.Fragment, undefined, React.createElement(ExpansionBasis$BtsCore.make, {
                                                                children: null
                                                              }, item.isShow ? React.createElement(React.Fragment, undefined, React.createElement(IconButton$BtsCore.make, {
                                                                          variant: "span",
                                                                          style: {
                                                                            marginRight: "12px"
                                                                          },
                                                                          padding: "6",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(dispatch, /* ClickActive */Block.__(1, [
                                                                                            i,
                                                                                            true
                                                                                          ]));
                                                                            }),
                                                                          children: React.createElement(IconAction$BtsCore.make, {
                                                                                animation: "circle",
                                                                                src: Icons$BtsCore.addBlack
                                                                              })
                                                                        }), item.active ? React.createElement(IconButton$BtsCore.make, {
                                                                            variant: "span",
                                                                            style: {
                                                                              marginRight: "12px"
                                                                            },
                                                                            padding: "6",
                                                                            onClick: (function (param) {
                                                                                return Curry._1(dispatch, /* ClickActive */Block.__(1, [
                                                                                              i,
                                                                                              false
                                                                                            ]));
                                                                              }),
                                                                            children: React.createElement(IconAction$BtsCore.make, {
                                                                                  animation: "leftRight",
                                                                                  src: Icons$BtsCore.saveBlack
                                                                                })
                                                                          }) : React.createElement(IconButton$BtsCore.make, {
                                                                            variant: "span",
                                                                            style: {
                                                                              marginRight: "12px"
                                                                            },
                                                                            padding: "6",
                                                                            onClick: (function (param) {
                                                                                return Curry._1(dispatch, /* ClickActive */Block.__(1, [
                                                                                              i,
                                                                                              true
                                                                                            ]));
                                                                              }),
                                                                            children: React.createElement(IconAction$BtsCore.make, {
                                                                                  animation: "leftRight",
                                                                                  src: Icons$BtsCore.editBlack
                                                                                })
                                                                          })) : null, React.createElement("span", {
                                                                    style: {
                                                                      color: "red"
                                                                    }
                                                                  }, item.isShow ? "CLICK TO CLOSE" : "CLICK TO EXPAND"))),
                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                            src: item.isShow ? Icons$BtsCore.arrowDownBlack : Icons$BtsCore.arrowUpBlack
                                                          })
                                                    ]
                                                  }),
                                              React.createElement(GridContainer$BtsCore.make, {
                                                    direction: "column",
                                                    justify: "start",
                                                    alignItem: "start",
                                                    children: $$Array.map((function (desc) {
                                                            return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                            bottom: "0",
                                                                            xs: "auto",
                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                  variant: "body1",
                                                                                  color: "rgba(0,0,0,1)",
                                                                                  noWrap: true,
                                                                                  children: desc.descTitle + (" : " + desc.descValue)
                                                                                })
                                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                                            xs: "auto",
                                                                            children: $$Array.map((function (other) {
                                                                                    return React.createElement("div", {
                                                                                                style: {
                                                                                                  float: "left",
                                                                                                  height: "20px",
                                                                                                  marginTop: "10px",
                                                                                                  marginRight: "30px"
                                                                                                }
                                                                                              }, React.createElement(ExpansionBasis$BtsCore.make, {
                                                                                                    children: React.createElement(Typography$BtsCore.make, {
                                                                                                          variant: "body2",
                                                                                                          color: "rgba(0, 0, 0, 0.8)",
                                                                                                          noWrap: true,
                                                                                                          children: other.otherTitle + (" : " + other.otherValue)
                                                                                                        })
                                                                                                  }));
                                                                                  }), desc.others)
                                                                          }));
                                                          }), item.descs)
                                                  })
                                            ]
                                          }))
                                });
                    }), state.items)
            });
}

var make = ExpansionTables;

export {
  reducer ,
  initialState ,
  make ,
  
}
/* react Not a pure module */
