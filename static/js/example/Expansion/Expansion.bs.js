// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as ExpansionBasis$BtsCore from "../../material-ui/core/ExpansionPanel/ExpansionBasis.bs.js";
import * as ExpansionPanel$BtsCore from "../../material-ui/core/ExpansionPanel/ExpansionPanel.bs.js";
import * as ExpansionSummary$BtsCore from "../../material-ui/core/ExpansionPanel/ExpansionSummary.bs.js";

function reducer(state, action) {
  return {
          isShow: !state.isShow
        };
}

var initialState = {
  isShow: false
};

function Expansion(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var showPanel = React.useCallback((function (param) {
          return Curry._1(dispatch, /* ShowPanel */0);
        }));
  return React.createElement("div", undefined, React.createElement(ExpansionPanel$BtsCore.make, {
                  showPanel: state.isShow,
                  children: /* tuple */[
                    React.createElement(ExpansionSummary$BtsCore.make, {
                          showSummary: state.isShow,
                          onClick: showPanel,
                          children: /* tuple */[
                            React.createElement("span", undefined, "123"),
                            React.createElement(IconGeneral$BtsCore.make, {
                                  src: state.isShow ? Icons$BtsCore.arrowUpBlack : Icons$BtsCore.arrowDownBlack
                                })
                          ]
                        }),
                    "test"
                  ]
                }), React.createElement(ExpansionPanel$BtsCore.make, {
                  showPanel: state.isShow,
                  children: /* tuple */[
                    React.createElement(ExpansionSummary$BtsCore.make, {
                          showSummary: state.isShow,
                          onClick: showPanel,
                          children: /* tuple */[
                            React.createElement(React.Fragment, undefined, React.createElement(ExpansionBasis$BtsCore.make, {
                                      children: React.createElement("span", undefined, "123")
                                    }), React.createElement(ExpansionBasis$BtsCore.make, {
                                      children: React.createElement("span", undefined, "123")
                                    })),
                            React.createElement(IconGeneral$BtsCore.make, {
                                  src: state.isShow ? Icons$BtsCore.arrowDownBlack : Icons$BtsCore.arrowUpBlack
                                })
                          ]
                        }),
                    "test"
                  ]
                }));
}

var make = Expansion;

export {
  reducer ,
  initialState ,
  make ,
  
}
/* react Not a pure module */
