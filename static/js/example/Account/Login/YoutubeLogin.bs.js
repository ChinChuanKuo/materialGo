// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ReactIntl from "react-intl";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Button$BtsCore from "../../../material-ui/core/Button/Button.bs.js";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";
import * as GridItem$BtsCore from "../../../material-ui/core/Grid/GridItem.bs.js";
import * as AccountBoard$BtsCore from "../AccountBoard.bs.js";
import * as GridContainer$BtsCore from "../../../material-ui/core/Grid/GridContainer.bs.js";
import * as TextFieldOutline$BtsCore from "../../../material-ui/core/TextField/TextFieldOutline.bs.js";

function YoutubeLogin(Props) {
  var error = Props.error;
  var loading = Props.loading;
  var showYoutube = Props.showYoutube;
  var youtubeText = Props.youtubeText;
  var disabled = Props.disabled;
  var userid = Props.userid;
  var changeUserid = Props.changeUserid;
  var keydownUserid = Props.keydownUserid;
  var password = Props.password;
  var changePassword = Props.changePassword;
  var keydownPassword = Props.keydownPassword;
  var forgetForm = Props.forgetForm;
  var sendForm = Props.sendForm;
  var children = Props.children;
  var tmp = {
    right: "0",
    left: "0",
    type_: "email",
    value: Setting$BtsCore.stringObjects(userid),
    disabled: Setting$BtsCore.disabledObjects(disabled),
    children: React.createElement(ReactIntl.FormattedMessage, {
          id: "Login.email",
          defaultMessage: "Email"
        })
  };
  if (changeUserid !== undefined) {
    tmp.onChange = Caml_option.valFromOption(changeUserid);
  }
  if (keydownUserid !== undefined) {
    tmp.onKeyDown = Caml_option.valFromOption(keydownUserid);
  }
  var tmp$1 = {
    right: "0",
    left: "0",
    type_: "password",
    value: Setting$BtsCore.stringObjects(password),
    disabled: Setting$BtsCore.disabledObjects(disabled),
    children: React.createElement(ReactIntl.FormattedMessage, {
          id: "Login.password",
          defaultMessage: "Password"
        })
  };
  if (changePassword !== undefined) {
    tmp$1.onChange = Caml_option.valFromOption(changePassword);
  }
  if (keydownPassword !== undefined) {
    tmp$1.onKeyDown = Caml_option.valFromOption(keydownPassword);
  }
  var tmp$2 = {
    variant: "button",
    border: "contained",
    size: "medium",
    disabled: Setting$BtsCore.disabledObjects(disabled),
    children: React.createElement(ReactIntl.FormattedMessage, {
          id: "Account.forget",
          defaultMessage: "Forget"
        })
  };
  if (forgetForm !== undefined) {
    tmp$2.onClick = Caml_option.valFromOption(forgetForm);
  }
  var tmp$3 = {
    variant: "button",
    border: "contained",
    size: "medium",
    disabled: Setting$BtsCore.disabledObjects(disabled),
    children: React.createElement(ReactIntl.FormattedMessage, {
          id: "Account.send",
          defaultMessage: "Send"
        })
  };
  if (sendForm !== undefined) {
    tmp$3.onClick = Caml_option.valFromOption(sendForm);
  }
  return React.createElement(AccountBoard$BtsCore.make, {
              error: Setting$BtsCore.disabledObjects(error),
              loading: Setting$BtsCore.disabledObjects(loading),
              tile: "LOGIN",
              showYoutube: Setting$BtsCore.disabledObjects(showYoutube),
              youtubeText: Setting$BtsCore.stringObjects(youtubeText),
              children: React.createElement(GridContainer$BtsCore.make, {
                    direction: "column",
                    justify: "center",
                    alignItem: "stretch",
                    children: null
                  }, React.createElement(GridItem$BtsCore.make, {
                        right: "0",
                        left: "0",
                        xs: "auto",
                        children: children
                      }), React.createElement(GridItem$BtsCore.make, {
                        right: "0",
                        left: "0",
                        xs: "auto",
                        children: React.createElement(TextFieldOutline$BtsCore.make, tmp)
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "21",
                        right: "0",
                        left: "0",
                        xs: "auto",
                        children: React.createElement(TextFieldOutline$BtsCore.make, tmp$1)
                      }), React.createElement(GridItem$BtsCore.make, {
                        top: "21",
                        right: "0",
                        left: "0",
                        xs: "auto",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "row",
                              justify: "between",
                              alignItem: "center",
                              children: null
                            }, React.createElement(GridItem$BtsCore.make, {
                                  right: "0",
                                  left: "0",
                                  xs: "no",
                                  children: React.createElement(Button$BtsCore.make, tmp$2)
                                }), React.createElement(GridItem$BtsCore.make, {
                                  right: "0",
                                  left: "0",
                                  xs: "no",
                                  children: React.createElement(Button$BtsCore.make, tmp$3)
                                }))
                      }))
            });
}

var make = YoutubeLogin;

export {
  make ,
  
}
/* react Not a pure module */
