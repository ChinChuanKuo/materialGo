// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ReactIntl from "react-intl";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Button$BtsCore from "../../../material-ui/core/Button/Button.bs.js";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";
import * as GridItem$BtsCore from "../../../material-ui/core/Grid/GridItem.bs.js";
import * as AccountBoard$BtsCore from "../AccountBoard.bs.js";
import * as GridContainer$BtsCore from "../../../material-ui/core/Grid/GridContainer.bs.js";

function YoutubeOauth(Props) {
  var error = Props.error;
  var loading = Props.loading;
  var showYoutube = Props.showYoutube;
  var youtubeText = Props.youtubeText;
  var disabled = Props.disabled;
  var signGoogle = Props.signGoogle;
  var signFacebook = Props.signFacebook;
  var signLinkedln = Props.signLinkedln;
  var signTwitter = Props.signTwitter;
  var tmp = {
    variant: "button",
    width: "100%",
    border: "contained",
    size: "medium",
    disabled: Setting$BtsCore.disabledObjects(disabled),
    children: React.createElement(ReactIntl.FormattedMessage, {
          id: "Oauth.google",
          defaultMessage: "Google"
        })
  };
  if (signGoogle !== undefined) {
    tmp.onClick = Caml_option.valFromOption(signGoogle);
  }
  var tmp$1 = {
    variant: "button",
    enterBackgroundColor: "rgba(45,136,255,0.8)",
    downBackgroundColor: "rgba(45,136,255,0.8)",
    backgroundColor: "rgba(45,136,255,1)",
    width: "100%",
    border: "contained",
    size: "medium",
    disabled: Setting$BtsCore.disabledObjects(disabled),
    children: React.createElement(ReactIntl.FormattedMessage, {
          id: "Oauth.facebook",
          defaultMessage: "Facebook"
        })
  };
  if (signFacebook !== undefined) {
    tmp$1.onClick = Caml_option.valFromOption(signFacebook);
  }
  var tmp$2 = {
    variant: "button",
    enterBackgroundColor: "rgba(0,119,181,0.8)",
    downBackgroundColor: "rgba(0,119,181,0.8)",
    backgroundColor: "rgba(0,119,181,1)",
    width: "100%",
    border: "contained",
    size: "medium",
    disabled: Setting$BtsCore.disabledObjects(disabled),
    children: React.createElement(ReactIntl.FormattedMessage, {
          id: "Oauth.linkedln",
          defaultMessage: "Linkedln"
        })
  };
  if (signLinkedln !== undefined) {
    tmp$2.onClick = Caml_option.valFromOption(signLinkedln);
  }
  var tmp$3 = {
    variant: "button",
    enterBackgroundColor: "rgba(21,32,43,0.8)",
    downBackgroundColor: "rgba(21,32,43,0.8)",
    backgroundColor: "rgba(21,32,43,1)",
    width: "100%",
    border: "contained",
    size: "medium",
    disabled: Setting$BtsCore.disabledObjects(disabled),
    children: React.createElement(ReactIntl.FormattedMessage, {
          id: "Oauth.twitter",
          defaultMessage: "Twitter"
        })
  };
  if (signTwitter !== undefined) {
    tmp$3.onClick = Caml_option.valFromOption(signTwitter);
  }
  return React.createElement(AccountBoard$BtsCore.make, {
              error: Setting$BtsCore.disabledObjects(error),
              loading: Setting$BtsCore.disabledObjects(loading),
              index: 2,
              tile: "OAUTH",
              showYoutube: Setting$BtsCore.disabledObjects(showYoutube),
              youtubeText: Setting$BtsCore.stringObjects(youtubeText),
              children: React.createElement(GridContainer$BtsCore.make, {
                    direction: "column",
                    justify: "center",
                    alignItem: "stretch",
                    children: null
                  }, React.createElement(GridItem$BtsCore.make, {
                        right: "0",
                        left: "0",
                        xs: "auto",
                        children: React.createElement(Button$BtsCore.make, tmp)
                      }), React.createElement(GridItem$BtsCore.make, {
                        right: "0",
                        left: "0",
                        xs: "auto",
                        children: React.createElement(Button$BtsCore.make, tmp$1)
                      }), React.createElement(GridItem$BtsCore.make, {
                        right: "0",
                        left: "0",
                        xs: "auto",
                        children: React.createElement(Button$BtsCore.make, tmp$2)
                      }), React.createElement(GridItem$BtsCore.make, {
                        right: "0",
                        left: "0",
                        xs: "auto",
                        children: React.createElement(Button$BtsCore.make, tmp$3)
                      }))
            });
}

var make = YoutubeOauth;

export {
  make ,
  
}
/* react Not a pure module */
