// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Camera$BtsCore from "../../example/Cameras/Camera.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as Recorder$BtsCore from "../../example/Cameras/Recorder.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as UserMedia$BtsCore from "../../example/Cameras/UserMedia.bs.js";
import * as NewInstagram$BtsCore from "../../example/Instagram/NewInstagram.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";

function reducer(state, action) {
  if (typeof action !== "number") {
    return {
            formLoad: state.formLoad,
            showProgress: state.showProgress,
            error: state.error,
            recorder: action[0]
          };
  }
  switch (action) {
    case /* SettingError */0 :
        return {
                formLoad: state.formLoad,
                showProgress: state.showProgress,
                error: !state.error,
                recorder: state.recorder
              };
    case /* SettingFormLoad */1 :
        return {
                formLoad: !state.formLoad,
                showProgress: state.showProgress,
                error: state.error,
                recorder: state.recorder
              };
    case /* ActionShowProgress */2 :
        return {
                formLoad: state.formLoad,
                showProgress: !state.showProgress,
                error: state.error,
                recorder: state.recorder
              };
    
  }
}

var initialState = {
  formLoad: false,
  showProgress: false,
  error: false,
  recorder: null
};

function Home(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var getMediaStream = function (param) {
    navigator.mediaDevices.getUserMedia({
              audio: false,
              video: true
            }).then((function (response) {
              return Promise.resolve((UserMedia$BtsCore.attachMedia(document.getElementById("video"), response), document.getElementById("video").play(), Curry._1(dispatch, /* ActionRecorder */[Recorder$BtsCore.make(response)])));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var recordFile = React.useCallback((function (param) {
          state.recorder.start();
          
        }));
  var screenFile = React.useCallback((function (param) {
          state.recorder.stop();
          
        }));
  var handleScrollBar = function ($$event) {
    console.log($$event);
    
  };
  React.useEffect((function () {
          window.addEventListener("dataavailable", handleScrollBar, true);
          return (function (param) {
                    
                  });
        }));
  React.useEffect((function () {
          var timeId = getMediaStream(undefined);
          return (function (param) {
                    return timeId;
                  });
        }), ([]));
  return React.createElement(NewInstagram$BtsCore.make, {
              showProgress: state.showProgress,
              error: state.error,
              children: React.createElement(GridItem$BtsCore.make, {
                    style: Together$BtsCore.marginAuto,
                    top: "0",
                    right: "32",
                    bottom: "0",
                    left: "32",
                    xs: "12",
                    maxWidth: "770px",
                    children: React.createElement(GridContainer$BtsCore.make, {
                          direction: "column",
                          justify: "center",
                          alignItem: "stretch",
                          children: null
                        }, React.createElement(GridItem$BtsCore.make, {
                              top: "0",
                              right: "0",
                              bottom: "0",
                              left: "0",
                              xs: "auto",
                              children: React.createElement(Camera$BtsCore.make, {
                                    width: "auto",
                                    height: "100%"
                                  })
                            }), React.createElement(GridItem$BtsCore.make, {
                              top: "0",
                              right: "0",
                              bottom: "0",
                              left: "0",
                              xs: "no",
                              children: React.createElement(GridContainer$BtsCore.make, {
                                    direction: "row",
                                    justify: "between",
                                    alignItem: "center",
                                    children: null
                                  }, React.createElement(GridItem$BtsCore.make, {
                                        top: "0",
                                        right: "0",
                                        bottom: "0",
                                        left: "0",
                                        xs: "no",
                                        children: React.createElement(Button$BtsCore.make, {
                                              enterBackgroundColor: "rgba(255,0,0,0.4)",
                                              downBackgroundColor: "rgba(255,0,0,0.2)",
                                              backgroundColor: "rgba(255,255,255,1)",
                                              color: "rgba(255,0,0,1)",
                                              onClick: recordFile,
                                              children: "Recording"
                                            })
                                      }), React.createElement(GridItem$BtsCore.make, {
                                        top: "0",
                                        right: "0",
                                        bottom: "0",
                                        left: "0",
                                        xs: "no",
                                        children: React.createElement(Button$BtsCore.make, {
                                              enterBackgroundColor: "rgba(255,0,0,0.4)",
                                              downBackgroundColor: "rgba(255,0,0,0.2)",
                                              backgroundColor: "rgba(255,255,255,1)",
                                              color: "rgba(255,0,0,1)",
                                              onClick: screenFile,
                                              children: "Screenshot"
                                            })
                                      }))
                            }))
                  })
            });
}

var make = Home;

export {
  reducer ,
  initialState ,
  make ,
  
}
/* initialState Not a pure module */
